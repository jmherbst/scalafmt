name: CI
on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
  release:
    types: [published]

jobs:
  native-image:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        libc: [ musl]
        include:
          - os: ubuntu-latest
            libc: musl
            artifact: scalafmt-linux-musl
            env:
              NATIVE_IMAGE_STATIC: true
              NATIVE_IMAGE_MUSL: /home/runner/work/scalafmt/scalafmt/bundle
    env: ${{ matrix.env }}
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v13
        with:
          java-version: graalvm-ce-java11@20.1.0
      - if: matrix.libc == 'musl'
        name: Install musl bundle
        run: |
          wget https://github.com/gradinac/musl-bundle-example/releases/download/v1.0/musl.tar.gz
          tar xvf musl.tar.gz
      - run: bin/build-native-image.sh
        env:
          CI: true
      - uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.artifact }}
          path: scalafmt
  dockerize:
    needs: [native-image]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && github.event_name != 'release'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: scalameta/scalafmt
          tags: type=semver,pattern={{raw}}
      - name: Downloading scalafmt-linux-musl for Docker Build
        uses: actions/download-artifact@v2.0.10
        with:
          name: scalafmt-linux-musl
          path: tmp/scalafmt-linux-musl
      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
